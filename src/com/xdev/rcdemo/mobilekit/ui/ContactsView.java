package com.xdev.rcdemo.mobilekit.ui;

import com.vaadin.navigator.ViewChangeListener;
import com.vaadin.ui.Button;
import com.vaadin.ui.Notification;
import com.vaadin.ui.Notification.Type;
import com.xdev.mobile.service.contacts.Contact;
import com.xdev.mobile.service.contacts.ContactFindOptions;
import com.xdev.mobile.service.contacts.ContactsService;
import com.xdev.mobile.service.contacts.ContactsServiceError.Reason;
import com.xdev.ui.XdevButton;
import com.xdev.ui.XdevGridLayout;
import com.xdev.ui.XdevView;
import com.xdev.ui.entitycomponent.XdevBeanContainer;
import com.xdev.ui.entitycomponent.table.XdevTable;
import com.xdev.ui.util.NestedProperty;

public class ContactsView extends XdevView {

	/**
	 *
	 */
	public ContactsView() {
		super();
		this.initUI();
	}

	@Override
	public void enter(final ViewChangeListener.ViewChangeEvent event) {
		super.enter(event);

	}

	/**
	 * Event handler delegate method for the {@link XdevButton}
	 * {@link #cmdPick}.
	 *
	 * @see Button.ClickListener#buttonClick(Button.ClickEvent)
	 * @eventHandlerDelegate Do NOT delete, used by UI designer!
	 */
	private void cmdPick_buttonClick(final Button.ClickEvent event) {

		ContactsService.getInstance().pickContact(contact -> {

			final XdevBeanContainer<Contact> container = this.lstContacts.getBeanContainerDataSource();
			container.removeAll();
			container.addBean(contact);

		}, error -> {
			if (error.getReason() == Reason.OPERATION_CANCELLED_ERROR) {
				Notification.show("Canceled");
			} else {
				Notification.show(error.getMessage(), Type.ERROR_MESSAGE);
			}
		});
	}

	/**
	 * Event handler delegate method for the {@link XdevButton}
	 * {@link #cmdList}.
	 *
	 * @see Button.ClickListener#buttonClick(Button.ClickEvent)
	 * @eventHandlerDelegate Do NOT delete, used by UI designer!
	 */
	private void cmdList_buttonClick(final Button.ClickEvent event) {

		this.cmdList.setEnabled(false);

		ContactsService.getInstance().find(ContactFindOptions.all(), contacts -> {
			final XdevBeanContainer<Contact> container = this.lstContacts.getBeanContainerDataSource();
			container.removeAll();
			container.addAll(contacts);
			this.cmdList.setEnabled(true);
		}, error -> {
			Notification.show(error.getMessage(), Type.ERROR_MESSAGE);
			this.cmdList.setEnabled(true);
		});

	}

	/*
	 * WARNING: Do NOT edit!<br>The content of this method is always regenerated by
	 * the UI designer.
	 */
	// <generated-code name="initUI">
	private void initUI() {
		this.gridLayout = new XdevGridLayout();
		this.navBar = new NavBar();
		this.cmdPick = new XdevButton();
		this.cmdList = new XdevButton();
		this.lstContacts = new XdevTable<>();

		this.navBar.setTitle("Contacts");
		this.cmdPick.setCaption("Pick Contact");
		this.cmdList.setCaption("List All Contacts");
		this.lstContacts.setContainerDataSource(Contact.class, false, NestedProperty.of("name.givenName", String.class),
				NestedProperty.of("name.familyName", String.class));
		this.lstContacts.setVisibleColumns("name.givenName", "name.familyName");
		this.lstContacts.setColumnHeader("name.givenName", "First Name");
		this.lstContacts.setColumnExpandRatio("name.givenName", 1.0F);
		this.lstContacts.setColumnHeader("name.familyName", "Family Name");
		this.lstContacts.setColumnExpandRatio("name.familyName", 1.0F);

		this.gridLayout.setColumns(1);
		this.gridLayout.setRows(4);
		this.navBar.setWidth(100, Unit.PERCENTAGE);
		this.navBar.setHeight(-1, Unit.PIXELS);
		this.gridLayout.addComponent(this.navBar, 0, 0);
		this.cmdPick.setWidth(100, Unit.PERCENTAGE);
		this.cmdPick.setHeight(-1, Unit.PIXELS);
		this.gridLayout.addComponent(this.cmdPick, 0, 1);
		this.cmdList.setWidth(100, Unit.PERCENTAGE);
		this.cmdList.setHeight(-1, Unit.PIXELS);
		this.gridLayout.addComponent(this.cmdList, 0, 2);
		this.lstContacts.setSizeFull();
		this.gridLayout.addComponent(this.lstContacts, 0, 3);
		this.gridLayout.setColumnExpandRatio(0, 10.0F);
		this.gridLayout.setRowExpandRatio(3, 100.0F);
		this.gridLayout.setSizeFull();
		this.setContent(this.gridLayout);
		this.setSizeFull();

		this.cmdPick.addClickListener(event -> this.cmdPick_buttonClick(event));
		this.cmdList.addClickListener(event -> this.cmdList_buttonClick(event));
	} // </generated-code>

	// <generated-code name="variables">
	private XdevButton cmdPick, cmdList;
	private NavBar navBar;
	private XdevGridLayout gridLayout;
	private XdevTable<Contact> lstContacts;
	// </generated-code>

}
