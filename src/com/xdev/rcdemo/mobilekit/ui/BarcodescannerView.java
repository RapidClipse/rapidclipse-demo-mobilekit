package com.xdev.rcdemo.mobilekit.ui;

import com.vaadin.navigator.ViewChangeListener;
import com.vaadin.shared.ui.label.ContentMode;
import com.vaadin.ui.Button;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.Notification;
import com.vaadin.ui.Notification.Type;
import com.xdev.mobile.service.barcodescanner.BarcodeData;
import com.xdev.mobile.service.barcodescanner.BarcodescannerOptions;
import com.xdev.mobile.service.barcodescanner.BarcodescannerService;
import com.xdev.ui.XdevButton;
import com.xdev.ui.XdevGridLayout;
import com.xdev.ui.XdevLabel;
import com.xdev.ui.XdevView;

public class BarcodescannerView extends XdevView {

	/**
	 *
	 */
	public BarcodescannerView() {
		super();
		this.initUI();
	}

	@Override
	public void enter(final ViewChangeListener.ViewChangeEvent event) {
		super.enter(event);

	}

	/**
	 * Event handler delegate method for the {@link XdevButton} {@link #cmdScan}.
	 *
	 * @see Button.ClickListener#buttonClick(Button.ClickEvent)
	 * @eventHandlerDelegate Do NOT delete, used by UI designer!
	 */
	private void cmdScan_buttonClick(final Button.ClickEvent event) {
		BarcodescannerService.getInstance().scan(BarcodescannerOptions.defaults(), data -> {
			showResult(data);
		}, error -> {
			Notification.show(error.getMessage(), Type.ERROR_MESSAGE);
		});
	}


	private void showResult(final BarcodeData data)
	{
		final StringBuilder sb = new StringBuilder();
		sb.append("Format: ").append(data.getFormat()).append("\n");
		sb.append("Data: ").append(data.getData());
		this.lblResult.setValue(sb.toString());
	}

	/*
	 * WARNING: Do NOT edit!<br>The content of this method is always regenerated by
	 * the UI designer.
	 */
	// <generated-code name="initUI">
	private void initUI() {
		this.gridLayout = new XdevGridLayout();
		this.navBar = new NavBar();
		this.cmdScan = new XdevButton();
		this.lblResult = new XdevLabel();

		this.navBar.setTitle("Barcodescanner");
		this.cmdScan.setCaption("Open Scanner");
		this.lblResult.setContentMode(ContentMode.PREFORMATTED);

		this.gridLayout.setColumns(1);
		this.gridLayout.setRows(4);
		this.navBar.setWidth(100, Unit.PERCENTAGE);
		this.navBar.setHeight(-1, Unit.PIXELS);
		this.gridLayout.addComponent(this.navBar, 0, 0);
		this.cmdScan.setWidth(100, Unit.PERCENTAGE);
		this.cmdScan.setHeight(-1, Unit.PIXELS);
		this.gridLayout.addComponent(this.cmdScan, 0, 1);
		this.lblResult.setWidth(100, Unit.PERCENTAGE);
		this.lblResult.setHeight(-1, Unit.PIXELS);
		this.gridLayout.addComponent(this.lblResult, 0, 2);
		this.gridLayout.setColumnExpandRatio(0, 10.0F);
		final CustomComponent gridLayout_vSpacer = new CustomComponent();
		gridLayout_vSpacer.setSizeFull();
		this.gridLayout.addComponent(gridLayout_vSpacer, 0, 3, 0, 3);
		this.gridLayout.setRowExpandRatio(3, 1.0F);
		this.gridLayout.setSizeFull();
		this.setContent(this.gridLayout);
		this.setSizeFull();

		this.cmdScan.addClickListener(event -> this.cmdScan_buttonClick(event));
	} // </generated-code>

	// <generated-code name="variables">
	private XdevButton cmdScan;
	private XdevLabel lblResult;
	private NavBar navBar;
	private XdevGridLayout gridLayout;
	// </generated-code>

}
