package com.xdev.rcdemo.mobilekit.ui;

import com.vaadin.data.Property;
import com.vaadin.navigator.ViewChangeListener;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.Notification;
import com.xdev.mobile.service.app.AppEventHandler;
import com.xdev.mobile.service.app.AppService;
import com.xdev.ui.XdevCheckBox;
import com.xdev.ui.XdevGridLayout;
import com.xdev.ui.XdevView;

public class AppView extends XdevView {

	private final AppEventHandler volumeUpHandler;
	private final AppEventHandler volumeDownHandler;
	private final AppEventHandler backButtonHandler;

	/**
	 *
	 */
	public AppView() {
		super();
		this.initUI();

		this.volumeUpHandler = event -> {
			Notification.show("Volume Up Pressed");
		};
		this.volumeDownHandler = event -> {
			Notification.show("Volume Down Pressed");
		};
		this.backButtonHandler = event -> {
			Notification.show("Back Button Pressed");
		};
	}

	@Override
	public void enter(final ViewChangeListener.ViewChangeEvent event) {
		super.enter(event);

	}

	/**
	 * Event handler delegate method for the {@link XdevCheckBox} {@link #chkVolumeButtons}.
	 *
	 * @see Property.ValueChangeListener#valueChange(Property.ValueChangeEvent)
	 * @eventHandlerDelegate Do NOT delete, used by UI designer!
	 */
	private void chkVolumeButtons_valueChange(final Property.ValueChangeEvent event) {

		if(this.chkVolumeButtons.getValue()){
			AppService.getInstance().addVolumeUpButtonHandler(this.volumeUpHandler);
			AppService.getInstance().addVolumeDownButtonHandler(this.volumeDownHandler);
		}
		else{
			AppService.getInstance().removeVolumeUpButtonHandler(this.volumeUpHandler);
			AppService.getInstance().removeVolumeDownButtonHandler(this.volumeDownHandler);
		}
	}

	/**
	 * Event handler delegate method for the {@link XdevCheckBox}
	 * {@link #chkBackButton}.
	 *
	 * @see Property.ValueChangeListener#valueChange(Property.ValueChangeEvent)
	 * @eventHandlerDelegate Do NOT delete, used by UI designer!
	 */
	private void chkBackButton_valueChange(final Property.ValueChangeEvent event) {

		if(this.chkBackButton.getValue()){
			AppService.getInstance().addBackButtonHandler(this.backButtonHandler);
		}
		else {
			AppService.getInstance().removeBackButtonHandler(this.backButtonHandler);
		}
	}

	/*
	 * WARNING: Do NOT edit!<br>The content of this method is always regenerated by
	 * the UI designer.
	 */
	// <generated-code name="initUI">
	private void initUI() {
		this.gridLayout = new XdevGridLayout();
		this.navBar = new NavBar();
		this.chkVolumeButtons = new XdevCheckBox();
		this.chkBackButton = new XdevCheckBox();

		this.navBar.setTitle("App");
		this.chkVolumeButtons.setCaption("Override Volume Buttons");
		this.chkVolumeButtons.setStyleName("large");
		this.chkVolumeButtons.setImmediate(true);
		this.chkBackButton.setCaption("Override Back Button");
		this.chkBackButton.setStyleName("large");
		this.chkBackButton.setImmediate(true);

		this.gridLayout.setColumns(1);
		this.gridLayout.setRows(4);
		this.navBar.setWidth(100, Unit.PERCENTAGE);
		this.navBar.setHeight(-1, Unit.PIXELS);
		this.gridLayout.addComponent(this.navBar, 0, 0);
		this.chkVolumeButtons.setWidth(100, Unit.PERCENTAGE);
		this.chkVolumeButtons.setHeight(-1, Unit.PIXELS);
		this.gridLayout.addComponent(this.chkVolumeButtons, 0, 1);
		this.chkBackButton.setWidth(100, Unit.PERCENTAGE);
		this.chkBackButton.setHeight(-1, Unit.PIXELS);
		this.gridLayout.addComponent(this.chkBackButton, 0, 2);
		this.gridLayout.setColumnExpandRatio(0, 10.0F);
		final CustomComponent gridLayout_vSpacer = new CustomComponent();
		gridLayout_vSpacer.setSizeFull();
		this.gridLayout.addComponent(gridLayout_vSpacer, 0, 3, 0, 3);
		this.gridLayout.setRowExpandRatio(3, 1.0F);
		this.gridLayout.setSizeFull();
		this.setContent(this.gridLayout);
		this.setSizeFull();

		this.chkVolumeButtons.addValueChangeListener(new Property.ValueChangeListener() {
			@Override
			public void valueChange(final Property.ValueChangeEvent event) {
				AppView.this.chkVolumeButtons_valueChange(event);
			}
		});
		this.chkBackButton.addValueChangeListener(new Property.ValueChangeListener() {
			@Override
			public void valueChange(final Property.ValueChangeEvent event) {
				AppView.this.chkBackButton_valueChange(event);
			}
		});
	} // </generated-code>

	// <generated-code name="variables">
	private NavBar navBar;
	private XdevCheckBox chkVolumeButtons, chkBackButton;
	private XdevGridLayout gridLayout;
	// </generated-code>


}
