package com.xdev.rcdemo.mobilekit.ui;

import java.util.Collection;

import com.vaadin.navigator.ViewChangeListener;
import com.vaadin.server.FontAwesome;
import com.vaadin.ui.Alignment;
import com.vaadin.ui.Button;
import com.vaadin.ui.Notification;
import com.vaadin.ui.Notification.Type;
import com.xdev.mobile.service.contacts.ContactField;
import com.xdev.mobile.service.contacts.ContactsService;
import com.xdev.mobile.service.sms.SmsOptions;
import com.xdev.mobile.service.sms.SmsService;
import com.xdev.ui.XdevButton;
import com.xdev.ui.XdevGridLayout;
import com.xdev.ui.XdevLabel;
import com.xdev.ui.XdevNativeSelect;
import com.xdev.ui.XdevTextArea;
import com.xdev.ui.XdevView;

public class SmsView extends XdevView {

	/**
	 *
	 */
	public SmsView() {
		super();
		this.initUI();
	}

	@Override
	public void enter(final ViewChangeListener.ViewChangeEvent event) {
		super.enter(event);

	}

	/**
	 * Event handler delegate method for the {@link XdevButton}
	 * {@link #cmdPickContact}.
	 *
	 * @see Button.ClickListener#buttonClick(Button.ClickEvent)
	 * @eventHandlerDelegate Do NOT delete, used by UI designer!
	 */
	private void cmdPickContact_buttonClick(final Button.ClickEvent event) {

		ContactsService.getInstance().pickContact(contact -> {

			this.cmdPickContact.setCaption(contact.toString());

			final Collection<ContactField> phoneNumbers = contact.getPhoneNumbers();
			this.cbPhoneNumber.removeAllItems();
			if (phoneNumbers != null) {
				this.cbPhoneNumber.addItems(phoneNumbers);
				if (phoneNumbers.size() > 0) {
					this.cbPhoneNumber.select(phoneNumbers.iterator().next());
				}
			}

			check();

		}, error -> {
			Notification.show(error.getMessage(), Type.ERROR_MESSAGE);
		});

	}

	private void check() {

		this.cmdSend.setEnabled(this.cbPhoneNumber.getValue() != null);
	}

	/**
	 * Event handler delegate method for the {@link XdevButton} {@link #cmdSend}.
	 *
	 * @see Button.ClickListener#buttonClick(Button.ClickEvent)
	 * @eventHandlerDelegate Do NOT delete, used by UI designer!
	 */
	private void cmdSend_buttonClick(final Button.ClickEvent event) {

		final String number = ((ContactField)this.cbPhoneNumber.getValue()).getValue();
		final String message = this.textArea.getValue();
		SmsService.getInstance().send(number, message, SmsOptions.defaults(), ()->{
			Notification.show("SMS sent successfully.");
		}, error->{
			Notification.show(error.getMessage(), Type.ERROR_MESSAGE);
		});
	}

	/*
	 * WARNING: Do NOT edit!<br>The content of this method is always regenerated by
	 * the UI designer.
	 */
	// <generated-code name="initUI">
	private void initUI() {
		this.gridLayout = new XdevGridLayout();
		this.navBar = new NavBar();
		this.label = new XdevLabel();
		this.cmdPickContact = new XdevButton();
		this.label2 = new XdevLabel();
		this.cbPhoneNumber = new XdevNativeSelect();
		this.label3 = new XdevLabel();
		this.textArea = new XdevTextArea();
		this.cmdSend = new XdevButton();

		this.navBar.setTitle("SMS");
		this.label.setStyleName("large");
		this.label.setValue("Contact:");
		this.cmdPickContact.setIcon(FontAwesome.USER);
		this.cmdPickContact.setCaption("Pick Contact");
		this.label2.setStyleName("large");
		this.label2.setValue("Number:");
		this.cbPhoneNumber.setImmediate(true);
		this.label3.setStyleName("large");
		this.label3.setValue("Message:");
		this.cmdSend.setCaption("Send SMS");
		this.cmdSend.setEnabled(false);

		this.gridLayout.setColumns(2);
		this.gridLayout.setRows(5);
		this.navBar.setWidth(100, Unit.PERCENTAGE);
		this.navBar.setHeight(-1, Unit.PIXELS);
		this.gridLayout.addComponent(this.navBar, 0, 0, 1, 0);
		this.label.setSizeUndefined();
		this.gridLayout.addComponent(this.label, 0, 1);
		this.gridLayout.setComponentAlignment(this.label, Alignment.MIDDLE_LEFT);
		this.cmdPickContact.setWidth(100, Unit.PERCENTAGE);
		this.cmdPickContact.setHeight(-1, Unit.PIXELS);
		this.gridLayout.addComponent(this.cmdPickContact, 1, 1);
		this.label2.setSizeUndefined();
		this.gridLayout.addComponent(this.label2, 0, 2);
		this.gridLayout.setComponentAlignment(this.label2, Alignment.MIDDLE_LEFT);
		this.cbPhoneNumber.setWidth(100, Unit.PERCENTAGE);
		this.cbPhoneNumber.setHeight(-1, Unit.PIXELS);
		this.gridLayout.addComponent(this.cbPhoneNumber, 1, 2);
		this.label3.setSizeUndefined();
		this.gridLayout.addComponent(this.label3, 0, 3);
		this.textArea.setSizeFull();
		this.gridLayout.addComponent(this.textArea, 1, 3);
		this.cmdSend.setSizeUndefined();
		this.gridLayout.addComponent(this.cmdSend, 1, 4);
		this.gridLayout.setComponentAlignment(this.cmdSend, Alignment.MIDDLE_RIGHT);
		this.gridLayout.setColumnExpandRatio(1, 10.0F);
		this.gridLayout.setRowExpandRatio(3, 10.0F);
		this.gridLayout.setSizeFull();
		this.setContent(this.gridLayout);
		this.setSizeFull();

		this.cmdPickContact.addClickListener(event -> this.cmdPickContact_buttonClick(event));
		this.cmdSend.addClickListener(event -> this.cmdSend_buttonClick(event));
	} // </generated-code>

	// <generated-code name="variables">
	private XdevLabel label, label2, label3;
	private XdevButton cmdPickContact, cmdSend;
	private XdevNativeSelect cbPhoneNumber;
	private XdevTextArea textArea;
	private NavBar navBar;
	private XdevGridLayout gridLayout;
	// </generated-code>

}
